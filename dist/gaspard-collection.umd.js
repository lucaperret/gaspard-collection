/*! gaspard-collection | (c) 2018  Luca Perret <perret.luca@gmail.com> | MIT | https://github.com/lucaperret/gaspard-collection */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("gaspard")):"function"==typeof define&&define.amd?define("gaspard-collection",["gaspard"],t):"object"==typeof exports?exports["gaspard-collection"]=t(require("gaspard")):e["gaspard-collection"]=t(e.gaspard)}(window,function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var u=t[r]={i:r,l:!1,exports:{}};return e[r].call(u.exports,u,u.exports,n),u.l=!0,u.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(t,n){t.exports=e},function(e,t,n){"use strict";n.r(t);var r=n(0),u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var a=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var n=void 0;n=Array.isArray(t)?t:"string"==typeof t?Object(r.find)(t):[t],this.elements=[].concat(n)}return u(e,[{key:"each",value:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return this.elements.forEach(function(t){return e.apply(void 0,[t].concat(n))}),this}},{key:"addClass",value:function(e){return this.each(r.addClass,e)}},{key:"toggleClass",value:function(e,t){return this.each(r.toggleClass,e,t)}},{key:"removeClass",value:function(e){return this.each(r.removeClass,e)}},{key:"attr",value:function(e,t){return this.each(r.attr,e,t)}},{key:"css",value:function(e,t){return this.each(r.css,e,t)}},{key:"before",value:function(e){return this.each(r.before,e)}},{key:"after",value:function(e){return this.each(r.after,e)}},{key:"prepend",value:function(e){return this.each(r.prepend,e)}},{key:"append",value:function(e){return this.each(r.append,e)}},{key:"remove",value:function(){return this.each(r.remove)}},{key:"text",value:function(e){return this.each(r.text,e)}},{key:"html",value:function(e){return this.each(r.html,e)}},{key:"replaceWith",value:function(e){return this.each(r.replaceWith,e)}},{key:"fadeIn",value:function(e){return this.each(r.fadeIn,e)}},{key:"fadeOut",value:function(e){return this.each(r.fadeOut,e)}},{key:"hide",value:function(){return this.each(r.hide)}},{key:"show",value:function(){return this.each(r.show)}},{key:"on",value:function(e,t){return this.each(r.on,e,t)}},{key:"off",value:function(e,t){return this.each(r.off,e,t)}},{key:"trigger",value:function(e,t){return this.each(r.trigger,e,t)}},{key:"find",value:function(t){return t instanceof Element==!0?new e(t):this.elements.map(function(e){return Object(r.find)(t,e)}).filter(function(e){return e.length||e instanceof Element==!0}).reduce(function(e,t){return e.concat(t)},[]).reduce(function(e,t){return~e.elements.indexOf(t)?e:(e.elements.push(t),e)},new e)}}]),e}();t.default=a}])});
//# sourceMappingURL=gaspard-collection.umd.js.map