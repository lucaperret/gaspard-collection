{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///gaspard-collection.umd.js","webpack:///webpack/bootstrap 76ae38414ef3b6a9fd79","webpack:///./src/index.js","webpack:///external \"gaspard\""],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_classCallCheck","instance","Constructor","TypeError","value","__WEBPACK_IMPORTED_MODULE_0_gaspard__","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","GaspardCollection","elements","arguments","undefined","contextElements","Array","isArray","concat","method","_len","params","_key","forEach","element","classNames","each","state","attribute","ruleName","htmlString","textString","duration","eventName","eventHandler","data","selectorOrElement","Element","map","filter","reduce","accumulator","indexOf","push"],"mappings":"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","file":"gaspard-collection.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"gaspard\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gaspard-collection\", [\"gaspard\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"common-gaspard-collection\"] = factory(require(\"gaspard\"));\n\telse\n\t\troot[\"GaspardCollection\"] = factory(root[\"gaspard\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*! gaspard-collection | (c) 2017  Luca Perret <perret.luca@gmail.com> | MIT | https://github.com/lucaperret/gaspard-collection */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"gaspard\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gaspard-collection\", [\"gaspard\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"common-gaspard-collection\"] = factory(require(\"gaspard\"));\n\telse\n\t\troot[\"GaspardCollection\"] = factory(root[\"gaspard\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gaspard__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gaspard___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_gaspard__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/***\n * GaspardCollection Module\n * @module GaspardCollection\n */\n\n\n\n/**\n * Use GaspardCollection class to perform actions on Elements\n * @example\n * import GaspardCollection from 'gaspard-collection'\n * const collection = new GaspardCollection('div.highlight')\n * collection\n *   .css('background-color', 'green')\n *   .find('p:first-child') // returns a new gaspard collection\n *   .addClass('introduction')\n *   .fadeIn(400)\n *   .elements // Array of matched elements\n *   .forEach(element => {\n *     console.log('div.highlight first paragraph', element)\n *   })\n *\n * @param {(Element[]|Element|string)} [elements=[]] DOM Elements, Element, or string to query the DOM\n * @return {GaspardCollection} GaspardCollection containing elements\n */\n\nvar GaspardCollection = function () {\n  function GaspardCollection() {\n    var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, GaspardCollection);\n\n    var contextElements = void 0;\n    if (Array.isArray(elements)) {\n      contextElements = elements;\n    } else if (typeof elements === 'string') {\n      contextElements = Object(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"find\"])(elements);\n    } else {\n      contextElements = [elements];\n    }\n    this.elements = [].concat(contextElements);\n  }\n  /**\n   * Apply a method on each elements and returns the collection to chain methods\n   * @param {Function} method Accept a method to run on each elements\n   * @param {any} params A list of argument to call the method with\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n\n\n  _createClass(GaspardCollection, [{\n    key: 'each',\n    value: function each(method) {\n      for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n\n      this.elements.forEach(function (element) {\n        return method.apply(undefined, [element].concat(params));\n      });\n      return this;\n    }\n    /**\n     * Add classes to each elements\n     * @see {@link attributes/addClass}\n     * @param {string} classNames\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'addClass',\n    value: function addClass(classNames) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"addClass\"], classNames);\n    }\n    /**\n     * Toggle classes to each elements\n     * @see {@link attributes/toggleClass}\n     * @param {string} classNames\n     * @param {boolean} state\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'toggleClass',\n    value: function toggleClass(classNames, state) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"toggleClass\"], classNames, state);\n    }\n    /**\n     * Remove classes to each elements\n     * @see {@link attributes/removeClass}\n     * @param {string} classNames\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'removeClass',\n    value: function removeClass(classNames) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"removeClass\"], classNames);\n    }\n    /**\n     * Set attribute to each elements\n     * @see {@link attributes/attr}\n     * @param {string} attribute\n     * @param {any} value\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'attr',\n    value: function attr(attribute, value) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"attr\"], attribute, value);\n    }\n    /**\n     * Set CSS value to each elements\n     * @see {@link attributes/css}\n     * @param {string} ruleName\n     * @param {string} value\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'css',\n    value: function css(ruleName, value) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"css\"], ruleName, value);\n    }\n    /**\n     * Insert content before each elements\n     * @see {@link content/before}\n     * @param {string} htmlString\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'before',\n    value: function before(htmlString) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"before\"], htmlString);\n    }\n    /**\n     * Insert content after each elements\n     * @see {@link content/after}\n     * @param {string} htmlString\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'after',\n    value: function after(htmlString) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"after\"], htmlString);\n    }\n    /**\n     * Prepend element to each elements\n     * @see {@link content/prepend}\n     * @param {Element} element\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'prepend',\n    value: function prepend(element) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"prepend\"], element);\n    }\n    /**\n     * Append element to each elements\n     * @see {@link content/append}\n     * @param {Element} element\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'append',\n    value: function append(element) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"append\"], element);\n    }\n    /**\n     * Remove each elements\n     * @see {@link content/remove}\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"remove\"]);\n    }\n    /**\n     * Set text to each elements\n     * @see {@link content/text}\n     * @param {string} textString\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'text',\n    value: function text(textString) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"text\"], textString);\n    }\n    /**\n     * Set html to each elements\n     * @see {@link content/html}\n     * @param {string} htmlString\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'html',\n    value: function html(htmlString) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"html\"], htmlString);\n    }\n    /**\n     * Replace each elements\n     * @see {@link content/replaceWith}\n     * @param {string} htmlString\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'replaceWith',\n    value: function replaceWith(htmlString) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"replaceWith\"], htmlString);\n    }\n    /**\n     * Fade in each elements\n     * @see {@link effects/fadeIn}\n     * @param {number} duration\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'fadeIn',\n    value: function fadeIn(duration) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"fadeIn\"], duration);\n    }\n    /**\n     * Fade out each elements\n     * @see {@link effects/fadeOut}\n     * @param {number} duration\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'fadeOut',\n    value: function fadeOut(duration) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"fadeOut\"], duration);\n    }\n    /**\n     * Hide each elements\n     * @see {@link effects/hide}\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide() {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"hide\"]);\n    }\n    /**\n     * Show each elements\n     * @see {@link effects/show}\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'show',\n    value: function show() {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"show\"]);\n    }\n    /**\n     * Attach an event handler function for each elements\n     * @see {@link events/on}\n     * @param {string} eventName\n     * @param {Function} eventHandler\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'on',\n    value: function on(eventName, eventHandler) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"on\"], eventName, eventHandler);\n    }\n    /**\n     * Remove an event handler function for each elements\n     * @see {@link events/off}\n     * @param {string} eventName\n     * @param {Function} eventHandler\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'off',\n    value: function off(eventName, eventHandler) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"off\"], eventName, eventHandler);\n    }\n    /**\n     * Execute all handlers to each elements\n     * @see {@link events/trigger}\n     * @param {string} eventName\n     * @param {Object} data\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'trigger',\n    value: function trigger(eventName, data) {\n      return this.each(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"trigger\"], eventName, data);\n    }\n    /**\n     * Returns a collection of matched elements either found in the DOM based on passed argument\n     * @see {@link selectors/find}\n     * @param {(string|Element)} selectorOrElement Accepts a string containing a CSS selector which is then used to match a set of elements, or an Element\n     * @return {GaspardCollection} GaspardCollection containing elements\n     */\n\n  }, {\n    key: 'find',\n    value: function find(selectorOrElement) {\n      if (selectorOrElement instanceof Element === true) {\n        return new GaspardCollection(selectorOrElement);\n      } else {\n        return this.elements.map(function (element) {\n          return Object(__WEBPACK_IMPORTED_MODULE_0_gaspard__[\"find\"])(selectorOrElement, element);\n        }).filter(function (element) {\n          return element.length || element instanceof Element === true;\n        }).reduce(function (accumulator, element) {\n          return accumulator.concat(element);\n        }, []).reduce(function (accumulator, element) {\n          if (~accumulator.elements.indexOf(element)) {\n            return accumulator;\n          } else {\n            accumulator.elements.push(element);\n            return accumulator;\n          }\n        }, new GaspardCollection());\n      }\n    }\n  }]);\n\n  return GaspardCollection;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GaspardCollection);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// gaspard-collection.umd.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 76ae38414ef3b6a9fd79","/***\n * GaspardCollection Module\n * @module GaspardCollection\n */\n\nimport {\n  addClass, removeClass, toggleClass, attr, css,\n  before, after, prepend, append, remove, text, html, replaceWith,\n  fadeIn, fadeOut, hide, show,\n  on, off, trigger,\n  find\n} from 'gaspard'\n\n/**\n * Use GaspardCollection class to perform actions on Elements\n * @example\n * import GaspardCollection from 'gaspard-collection'\n * const collection = new GaspardCollection('div.highlight')\n * collection\n *   .css('background-color', 'green')\n *   .find('p:first-child') // returns a new gaspard collection\n *   .addClass('introduction')\n *   .fadeIn(400)\n *   .elements // Array of matched elements\n *   .forEach(element => {\n *     console.log('div.highlight first paragraph', element)\n *   })\n *\n * @param {(Element[]|Element|string)} [elements=[]] DOM Elements, Element, or string to query the DOM\n * @return {GaspardCollection} GaspardCollection containing elements\n */\nexport default class GaspardCollection {\n  constructor (elements = []) {\n    let contextElements\n    if (Array.isArray(elements)) {\n      contextElements = elements\n    } else if (typeof elements === 'string') {\n      contextElements = find(elements)\n    } else {\n      contextElements = [elements]\n    }\n    this.elements = [].concat(contextElements)\n  }\n  /**\n   * Apply a method on each elements and returns the collection to chain methods\n   * @param {Function} method Accept a method to run on each elements\n   * @param {any} params A list of argument to call the method with\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  each (method, ...params) {\n    this.elements.forEach(element => method(element, ...params))\n    return this\n  }\n  /**\n   * Add classes to each elements\n   * @see {@link attributes/addClass}\n   * @param {string} classNames\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  addClass (classNames) {\n    return this.each(addClass, classNames)\n  }\n  /**\n   * Toggle classes to each elements\n   * @see {@link attributes/toggleClass}\n   * @param {string} classNames\n   * @param {boolean} state\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  toggleClass (classNames, state) {\n    return this.each(toggleClass, classNames, state)\n  }\n  /**\n   * Remove classes to each elements\n   * @see {@link attributes/removeClass}\n   * @param {string} classNames\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  removeClass (classNames) {\n    return this.each(removeClass, classNames)\n  }\n  /**\n   * Set attribute to each elements\n   * @see {@link attributes/attr}\n   * @param {string} attribute\n   * @param {any} value\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  attr (attribute, value) {\n    return this.each(attr, attribute, value)\n  }\n  /**\n   * Set CSS value to each elements\n   * @see {@link attributes/css}\n   * @param {string} ruleName\n   * @param {string} value\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  css (ruleName, value) {\n    return this.each(css, ruleName, value)\n  }\n  /**\n   * Insert content before each elements\n   * @see {@link content/before}\n   * @param {string} htmlString\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  before (htmlString) {\n    return this.each(before, htmlString)\n  }\n  /**\n   * Insert content after each elements\n   * @see {@link content/after}\n   * @param {string} htmlString\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  after (htmlString) {\n    return this.each(after, htmlString)\n  }\n  /**\n   * Prepend element to each elements\n   * @see {@link content/prepend}\n   * @param {Element} element\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  prepend (element) {\n    return this.each(prepend, element)\n  }\n  /**\n   * Append element to each elements\n   * @see {@link content/append}\n   * @param {Element} element\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  append (element) {\n    return this.each(append, element)\n  }\n  /**\n   * Remove each elements\n   * @see {@link content/remove}\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  remove () {\n    return this.each(remove)\n  }\n  /**\n   * Set text to each elements\n   * @see {@link content/text}\n   * @param {string} textString\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  text (textString) {\n    return this.each(text, textString)\n  }\n  /**\n   * Set html to each elements\n   * @see {@link content/html}\n   * @param {string} htmlString\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  html (htmlString) {\n    return this.each(html, htmlString)\n  }\n  /**\n   * Replace each elements\n   * @see {@link content/replaceWith}\n   * @param {string} htmlString\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  replaceWith (htmlString) {\n    return this.each(replaceWith, htmlString)\n  }\n  /**\n   * Fade in each elements\n   * @see {@link effects/fadeIn}\n   * @param {number} duration\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  fadeIn (duration) {\n    return this.each(fadeIn, duration)\n  }\n  /**\n   * Fade out each elements\n   * @see {@link effects/fadeOut}\n   * @param {number} duration\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  fadeOut (duration) {\n    return this.each(fadeOut, duration)\n  }\n  /**\n   * Hide each elements\n   * @see {@link effects/hide}\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  hide () {\n    return this.each(hide)\n  }\n  /**\n   * Show each elements\n   * @see {@link effects/show}\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  show () {\n    return this.each(show)\n  }\n  /**\n   * Attach an event handler function for each elements\n   * @see {@link events/on}\n   * @param {string} eventName\n   * @param {Function} eventHandler\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  on (eventName, eventHandler) {\n    return this.each(on, eventName, eventHandler)\n  }\n  /**\n   * Remove an event handler function for each elements\n   * @see {@link events/off}\n   * @param {string} eventName\n   * @param {Function} eventHandler\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  off (eventName, eventHandler) {\n    return this.each(off, eventName, eventHandler)\n  }\n  /**\n   * Execute all handlers to each elements\n   * @see {@link events/trigger}\n   * @param {string} eventName\n   * @param {Object} data\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  trigger (eventName, data) {\n    return this.each(trigger, eventName, data)\n  }\n  /**\n   * Returns a collection of matched elements either found in the DOM based on passed argument\n   * @see {@link selectors/find}\n   * @param {(string|Element)} selectorOrElement Accepts a string containing a CSS selector which is then used to match a set of elements, or an Element\n   * @return {GaspardCollection} GaspardCollection containing elements\n   */\n  find (selectorOrElement) {\n    if (selectorOrElement instanceof Element === true) {\n      return new GaspardCollection(selectorOrElement)\n    } else {\n      return this.elements\n        .map(element => find(selectorOrElement, element))\n        .filter(element => element.length || element instanceof Element === true)\n        .reduce((accumulator, element) => accumulator.concat(element), [])\n        .reduce((accumulator, element) => {\n          if (~accumulator.elements.indexOf(element)) {\n            return accumulator\n          } else {\n            accumulator.elements.push(element)\n            return accumulator\n          }\n        }, new GaspardCollection())\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"gaspard\"\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}